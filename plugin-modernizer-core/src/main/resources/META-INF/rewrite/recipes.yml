---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.FetchMetadata
displayName: Fetch metadata
description: Extracts metadata from a Jenkins plugin.
tags: ['extractor']
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.FetchMetadata
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.SetupJenkinsfile
displayName: Setup the Jenkinsfile
description: Add a missing Jenkinsfile to the Jenkins plugin.
tags: ['chore']
recipeList:
  - org.openrewrite.text.CreateTextFile:
      relativeFileName: Jenkinsfile
      overwriteExisting: false
      fileContents: |
        /*
         See the documentation for more options:
         https://github.com/jenkins-infra/pipeline-library/
        */
        buildPlugin(
          forkCount: '1C', // Run a JVM per core in tests
          useContainerAgent: true, // Set to `false` if you need to use Docker for containerized tests
          configurations: [
            [platform: 'linux', jdk: 21],
            [platform: 'windows', jdk: 17],
        ])
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.SetupGitIgnore
displayName: Setup the .gitignore
description: Add a missing .gitignore to the Jenkins plugin.
tags: ['chore']
recipeList:
    # Keep in sync with https://github.com/jenkinsci/archetypes/blob/master/common-files/gitignore
  - org.openrewrite.text.CreateTextFile:
      relativeFileName: .gitignore
      overwriteExisting: false
      fileContents: |
        target
        
        # mvn hpi:run
        work

        # IntelliJ IDEA project files
        *.iml
        *.iws
        *.ipr
        .idea
        
        # Eclipse project files
        .settings
        .classpath
        .project
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.SetupSecurityScan
displayName: Setup the .github/workflows/jenkins-security-scan.yml
description: Add a missing .github/workflows/jenkins-security-scan.yml to the Jenkins plugin.
tags: ['chore']
recipeList:
  # Keep in sync with https://github.com/jenkinsci/archetypes/blob/master/common-files/.github/workflows/jenkins-security-scan.yml
  - org.openrewrite.yaml.CreateYamlFile:
      relativeFileName: .github/workflows/jenkins-security-scan.yml
      overwriteExisting: false
      fileContents: |
        # More information about the Jenkins security scan can be found at the developer docs: https://www.jenkins.io/redirect/jenkins-security-scan/
        ---
        name: Jenkins Security Scan
        on:
          push:
            branches:
              - "master"
              - "main"
          pull_request:
            types: [opened, synchronize, reopened]
          workflow_dispatch:
        
        permissions:
          security-events: write
          contents: read
          actions: read
        
        jobs:
          security-scan:
            uses: jenkins-infra/jenkins-security-scan/.github/workflows/jenkins-security-scan.yaml@v2
            with:
              java-cache: 'maven'  # Optionally enable use of a build dependency cache. Specify 'maven' or 'gradle' as appropriate.
              # java-version: 21  # Optionally specify what version of Java to set up for the build, or remove to use a recent default.
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.AddPluginsBom
displayName: Add plugins BOM
description: Add the Jenkins BOM to the dependenciesManagement section of the pom.xml.
tags: ['chore', 'dependencies']
preconditions:
  - io.jenkins.tools.pluginmodernizer.core.recipes.IsMissingBom
recipeList:
  - org.openrewrite.jenkins.AddPluginsBom
  - io.jenkins.tools.pluginmodernizer.MigrateToJenkinsBaseLineProperty
  - io.jenkins.tools.pluginmodernizer.UpgradeBomVersion
  - io.jenkins.tools.pluginmodernizer.RemoveExtraMavenProperties
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.MigrateToJenkinsBaseLineProperty
displayName: Migrate pom to using jenkins.baseline property if bom is present
description: Migrate pom to using jenkins.baseline property if bom is present.
tags: ['chore']
preconditions:
  - io.jenkins.tools.pluginmodernizer.core.recipes.IsUsingBom
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.MigrateToJenkinsBaseLineProperty
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.AddCodeOwner
displayName: Add CODEOWNERS file
description: Adds a CODEOWNERS file to a Jenkins plugin.
tags: ['chore']
recipeList:
  - org.openrewrite.jenkins.github.AddTeamToCodeowners
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UpgradeParentVersion
displayName: Upgrade parent version to latest available in the 4.x line
description: Upgrade the parent version to latest available in the 4.x line.
tags: ['dependencies']
recipeList:
  - org.openrewrite.maven.UpgradeParentVersion:
      groupId: org.jenkins-ci.plugins
      artifactId: plugin
      newVersion: 4.X
  - io.jenkins.tools.pluginmodernizer.RemoveDependencyVersionOverride
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UpgradeNextMajorParentVersion
displayName: Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17
description: Upgrade to the next major parent version (5.X) requiring Jenkins 2.479 and Java 17.
tags: ['dependencies']
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.EnsureRelativePath
  - org.openrewrite.maven.UpgradeParentVersion:
      groupId: org.jenkins-ci.plugins
      artifactId: plugin
      newVersion: 5.X
  - io.jenkins.tools.pluginmodernizer.core.recipes.UpgradeJenkinsVersion:
      minimumVersion: 2.479.1
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.kohsuke.stapler.StaplerRequest
      newFullyQualifiedTypeName: org.kohsuke.stapler.StaplerRequest2
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: org.kohsuke.stapler.Stapler getCurrentRequest()
      newMethodName: getCurrentRequest2
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: org.kohsuke.stapler.Stapler getCurrentResponse()
      newMethodName: getCurrentResponse2
  - org.openrewrite.java.ChangePackage:
      oldPackageName: javax.servlet
      newPackageName: jakarta.servlet
      recursive: false
  - io.jenkins.tools.pluginmodernizer.RemoveDependencyVersionOverride
  - org.openrewrite.maven.RemoveProperty: # Set by 5.x parent, ensure it's removed
      propertyName: maven.compiler.release
  - org.openrewrite.maven.RemoveProperty: # Set by 5.x parent, ensure it's removed
      propertyName: maven.compiler.source
  - org.openrewrite.maven.RemoveProperty: # Set by 5.x parent, ensure it's removed
      propertyName: maven.compiler.target
  - io.jenkins.tools.pluginmodernizer.MigrateToJenkinsBaseLineProperty
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UpgradeBomVersion
displayName: Upgrade BOM version
description: Upgrade the bom version to latest available for the current BOM.
tags: ['dependencies']
preconditions:
  - io.jenkins.tools.pluginmodernizer.core.recipes.IsUsingBom
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.UpdateBom
  - io.jenkins.tools.pluginmodernizer.RemoveDependencyVersionOverride
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.RemoveDependencyVersionOverride
displayName: Remove dependency version override
description: Remove dependencies version override if managed from parent or bom.
tags: ['dependencies']
recipeList:
  - org.openrewrite.maven.RemoveRedundantDependencyVersions:
      onlyIfVersionsMatch: false # Keep newer dependencies
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.RemoveExtraMavenProperties
displayName: Remove extra maven properties
tags: ['chore']
description: Remove extra maven properties from the pom.
recipeList:
  - org.openrewrite.maven.RemoveProperty:
      propertyName: configuration-as-code.version
  - org.openrewrite.maven.RemoveProperty:
      propertyName: java.version
  - org.openrewrite.maven.RemoveProperty:
      propertyName: java.level
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.ReplaceLibrariesWithApiPlugin
displayName: Use API plugin instead of direct dependency
tags: ['developer']
description: Use API plugins instead of direct dependency.
recipeList:
  - io.jenkins.tools.pluginmodernizer.UseJsonApiPlugin
  - io.jenkins.tools.pluginmodernizer.UseJsonPathApiPlugin
  - io.jenkins.tools.pluginmodernizer.UseGsonApiPlugin
  - io.jenkins.tools.pluginmodernizer.UseCompressApiPlugin
  - io.jenkins.tools.pluginmodernizer.UseJodaTimeApiPlugin
  - io.jenkins.tools.pluginmodernizer.UseAsmApiPlugin
  - io.jenkins.tools.pluginmodernizer.UseByteBuddyApiPlugin
  - io.jenkins.tools.pluginmodernizer.UseCommonsLangApiPlugin
  - io.jenkins.tools.pluginmodernizer.UseCommonsTextApiPlugin
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UseJsonApiPlugin
displayName: Use JSON API plugin instead of direct dependency
description: Use JSON API plugin instead of direct dependency
tags: ['developer']
preconditions:
  - io.jenkins.tools.pluginmodernizer.conditions.IsUsingRecommendCoreVersion
recipeList:
  - org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      pluginGroupId: io.jenkins.plugins
      pluginArtifactId: json-api
      pluginVersion: 20241224-119.va_dca_a_b_ea_7da_5
      replaces:
        - groupId: org.json
          artifactId: json
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UseJsonPathApiPlugin
displayName: Use JSON Path API plugin instead of direct dependency
description: Use JSON Path API plugin instead of direct dependency
tags: ['developer']
preconditions:
  - io.jenkins.tools.pluginmodernizer.conditions.IsUsingRecommendCoreVersion
recipeList:
  - org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      pluginGroupId: io.jenkins.plugins
      pluginArtifactId: json-path-api
      pluginVersion: 2.9.0-118.v7f23ed82a_8b_8
      replaces:
        - groupId: com.jayway.jsonpath
          artifactId: json-path
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UseAsmApiPlugin
displayName: Use ASM API plugin instead of direct dependency
description: Use ASM API plugin instead of direct dependency
tags: ['developer']
preconditions:
  - io.jenkins.tools.pluginmodernizer.conditions.IsUsingCoreVersionWithASMRemoved
recipeList:
  - org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      pluginGroupId: io.jenkins.plugins
      pluginArtifactId: asm-api
      pluginVersion: 9.7.1-97.v4cc844130d97
      replaces:
        - groupId: org.ow2.asm
          artifactId: asm
        - groupId: org.ow2.asm
          artifactId: asm-analysis
        - groupId: org.ow2.asm
          artifactId: asm-commons
        - groupId: org.ow2.asm
          artifactId: asm-tree
        - groupId: org.ow2.asm
          artifactId: asm-util
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UseJodaTimeApiPlugin
displayName: Use Joda Time API plugin instead of direct dependency
description: Use Joda Time API plugin instead of direct dependency
tags: ['developer']
preconditions:
  - io.jenkins.tools.pluginmodernizer.conditions.IsUsingRecommendCoreVersion
recipeList:
  - org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      pluginGroupId: io.jenkins.plugins
      pluginArtifactId: joda-time-api
      pluginVersion: 2.13.0-93.v9934da_29b_a_e9
      replaces:
        - groupId: joda-time
          artifactId: joda-time
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UseGsonApiPlugin
displayName: Use GSON API plugin instead of direct dependency
description: Use GSON API plugin instead of direct dependency
tags: ['developer']
preconditions:
  - io.jenkins.tools.pluginmodernizer.conditions.IsUsingRecommendCoreVersion
recipeList:
  - org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      pluginGroupId: io.jenkins.plugins
      pluginArtifactId: gson-api
      pluginVersion: 2.11.0-85.v1f4e87273c33
      replaces:
        - groupId: com.google.code.gson
          artifactId: gson
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UseCompressApiPlugin
displayName: Use Compress API plugin instead of direct dependency
description: Use Compress API plugin instead of direct dependency.
tags: ['developer']
preconditions:
  - io.jenkins.tools.pluginmodernizer.conditions.IsUsingCoreVersionWithCommonsCompressRemoved
recipeList:
  - org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      pluginGroupId: io.jenkins.plugins
      pluginArtifactId: commons-compress-api
      pluginVersion: 1.27.1-1
      replaces:
        - groupId: org.apache.commons
          artifactId: commons-compress
        - groupId: org.apache.commons
          artifactId: commons-lang3
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UseCommonsLangApiPlugin
displayName: Use Commons Lang 3 API plugin instead of direct dependency
description: Use Commons Lang 3 API plugin instead of direct dependency
tags: ['developer']
preconditions:
  - org.openrewrite.jenkins.IsJenkinsPlugin:
      version: "[2.361.4,)"
recipeList:
  - org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      pluginGroupId: io.jenkins.plugins
      pluginArtifactId: commons-lang3-api
      pluginVersion: 3.17.0-84.vb_b_938040b_078
      replaces:
        - groupId: org.apache.commons
          artifactId: commons-lang3
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UseByteBuddyApiPlugin
displayName: Use Byte Buddy API plugin instead of direct dependency
description: Use Byte Buddy API plugin instead of direct dependency
tags: ['developer']
preconditions:
  - io.jenkins.tools.pluginmodernizer.conditions.IsUsingRecommendCoreVersion
recipeList:
  - org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      pluginGroupId: io.jenkins.plugins
      pluginArtifactId: byte-buddy-api
      pluginVersion: 1.15.11-99.v078c614a_5258
      replaces:
        - groupId: net.bytebuddy
          artifactId: byte-buddy
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UseCommonsTextApiPlugin
displayName: Use Commons Text API plugin instead of direct dependency
description: Use Commons Text API plugin instead of direct dependency
tags: ['developer']
preconditions:
  - io.jenkins.tools.pluginmodernizer.conditions.IsUsingRecommendCoreVersion
recipeList:
  - org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      pluginGroupId: io.jenkins.plugins
      pluginArtifactId: commons-text-api
      pluginVersion: 1.12.0-129.v99a_50df237f7
      replaces:
        - groupId: org.apache.commons
          artifactId: commons-text
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.EnsureRelativePath
displayName: Disable local resolution of parent POM
description: Disable local resolution of parent POM.
tags: ['chore']
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.EnsureRelativePath
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UpgradeToRecommendCoreVersion
displayName: Upgrade to the latest recommended core version and ensure the BOM matches the core version
description: Upgrade to the latest recommended core version and ensure the BOM matches the core version.
tags: ['developer']
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.EnsureRelativePath
  - io.jenkins.tools.pluginmodernizer.UpgradeParentVersion
  - io.jenkins.tools.pluginmodernizer.core.recipes.UpgradeJenkinsVersion:
      minimumVersion: 2.452.4
  - io.jenkins.tools.pluginmodernizer.RemoveDependencyVersionOverride
  - io.jenkins.tools.pluginmodernizer.RemoveExtraMavenProperties
  - io.jenkins.tools.pluginmodernizer.UpgradeBomVersion
  - io.jenkins.tools.pluginmodernizer.MigrateToJenkinsBaseLineProperty
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava11CoreVersion
displayName: Upgrade to latest LTS core version supporting Java 11
description: Upgrade to latest LTS core version supporting Java 11.
tags: ['developer']
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.EnsureRelativePath
  - io.jenkins.tools.pluginmodernizer.UpgradeParentVersion
  - io.jenkins.tools.pluginmodernizer.core.recipes.UpgradeJenkinsVersion:
      minimumVersion: 2.462.3
  - io.jenkins.tools.pluginmodernizer.RemoveDependencyVersionOverride
  - io.jenkins.tools.pluginmodernizer.RemoveExtraMavenProperties
  - io.jenkins.tools.pluginmodernizer.UpgradeBomVersion
  - io.jenkins.tools.pluginmodernizer.MigrateToJenkinsBaseLineProperty
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.UpgradeToLatestJava8CoreVersion
displayName: Upgrade to latest LTS core version supporting Java 8
description: Upgrade to latest LTS core version supporting Java 8.
tags: ['developer']
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.EnsureRelativePath
  - org.openrewrite.maven.UpgradeParentVersion:
      groupId: org.jenkins-ci.plugins
      artifactId: plugin
      newVersion: 4.51 # See https://www.jenkins.io/blog/2022/12/14/require-java-11/
  - io.jenkins.tools.pluginmodernizer.core.recipes.UpgradeJenkinsVersion:
      minimumVersion: 2.346.3
  - io.jenkins.tools.pluginmodernizer.RemoveDependencyVersionOverride
  - io.jenkins.tools.pluginmodernizer.RemoveExtraMavenProperties
  - io.jenkins.tools.pluginmodernizer.UpgradeBomVersion
  - io.jenkins.tools.pluginmodernizer.MigrateToJenkinsBaseLineProperty
  - org.openrewrite.java.RemoveUnusedImports
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.SetupDependabot
displayName: Setup dependabot
description: Setup dependabot for the Jenkins plugin if it doesn't exist.
tags: ['chore']
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.SetupDependabot
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.RemoveReleaseDrafter
displayName: Remove Release Drafter if CD is enabled
description: Remove Release Drafter if CD is enabled. See https://www.jenkins.io/doc/developer/publishing/releasing-cd/#configure-release-drafter.
tags: ['chore']
recipeList:
  - io.jenkins.tools.pluginmodernizer.core.recipes.RemoveReleaseDrafter
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.FixJellyIssues
displayName: Add XML declaration to Jelly files and create index.jelly if it doesn't exist
description: Ensure the XML declaration `<?jelly escape-by-default='true'?>` is present in all `.jelly` files and create index.jelly if it doesn't exist.
tags: ['chore']
recipeList:
  - org.openrewrite.jenkins.CreateIndexJelly
  - org.openrewrite.jenkins.AddJellyXmlDeclaration
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.conditions.IsUsingRecommendCoreVersion
displayName: Check if the plugin is using the recommended core version
description: Check if the plugin is using the recommended core version
tags: ['condition']
recipeList:
  - org.openrewrite.jenkins.IsJenkinsPlugin:
      version: "[2.452.4,)"
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.conditions.IsUsingCoreVersionWithASMRemoved
displayName: Check if the plugin is using a version with ASM removed
description: Check if the plugin is using a version with ASM removed
tags: ['condition']
recipeList:
  - org.openrewrite.jenkins.IsJenkinsPlugin:
      version: "[2.479.1,)"
---
type: specs.openrewrite.org/v1beta/recipe
name: io.jenkins.tools.pluginmodernizer.conditions.IsUsingCoreVersionWithCommonsCompressRemoved
displayName: Check if the plugin using using a version with commons-compress removed
description: Check if the plugin using using a version with commons-compress removed
tags: ['condition']
recipeList:
  - org.openrewrite.jenkins.IsJenkinsPlugin:
      version: "[2.489,)" # Adapt when LTS
