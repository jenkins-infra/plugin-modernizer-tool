<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.jenkins.plugin-modernizer</groupId>
    <artifactId>plugin-modernizer-pom</artifactId>
    <version>${changelist}</version>
  </parent>

  <artifactId>plugin-modernizer-cli</artifactId>
  <name>Plugin Modernizer CLI Interface</name>

  <dependencies>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
    </dependency>
    <dependency>
      <groupId>io.jenkins.plugin-modernizer</groupId>
      <artifactId>plugin-modernizer-core</artifactId>
      <version>${changelist}</version>
      <!-- We never use OpenRewrite directly from CLI because of maven invoker which will download the core module and it's dependencies -->
      <exclusions>
        <exclusion>
          <groupId>org.openrewrite</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.openrewrite.recipe</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-invoker</artifactId>
      <version>3.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.sparsick.testcontainers.gitserver</groupId>
      <artifactId>testcontainers-gitserver</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>apache-maven</artifactId>
      <version>${maven.version}</version>
      <classifier>bin</classifier>
      <type>zip</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <!-- The CLI is distributed via JRelease and published on the GitHub releases page -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/*ITCase.java</exclude>
          </excludes>
          <environmentVariables>
            <MAVEN_HOME>${project.build.directory}/apache-maven-${maven.version}</MAVEN_HOME>
            <M2_HOME>${project.build.directory}/apache-maven-${maven.version}</M2_HOME>
          </environmentVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <useModulePath>false</useModulePath>
              <includes>
                <include>**/*ITCase.java</include>
              </includes>
              <environmentVariables>
                <MAVEN_LOCAL_REPO>${maven.repo.local}</MAVEN_LOCAL_REPO>
                <MAVEN_HOME>${project.build.directory}/apache-maven-${maven.version}</MAVEN_HOME>
                <GH_TOKEN>fake-token</GH_TOKEN>
                <GH_OWNER>fake-owner</GH_OWNER>
                <GH_TARGET_ORGANISATION>jenkinsci</GH_TARGET_ORGANISATION>
              </environmentVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <goals>
              <goal>unpack</goal>
            </goals>
            <phase>process-test-resources</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.maven</groupId>
                  <artifactId>apache-maven</artifactId>
                  <classifier>bin</classifier>
                  <type>zip</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <!-- version specified in parent pom -->
        <executions>
          <execution>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <finalName>jenkins-plugin-modernizer-${project.version}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
              <archive>
                <manifest>
                  <mainClass>io.jenkins.tools.pluginmodernizer.cli.Main</mainClass>
                </manifest>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>info.picocli</groupId>
              <artifactId>picocli-codegen</artifactId>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
          </compilerArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
